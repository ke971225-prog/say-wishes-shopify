/**
 * Video Message Customization Interactive Logic
 */
class CustomProductOptions {
 constructor(options = {}) {
 this.basePrice = options.basePrice || 35.00;
 this.pricing = {
 language: {
 english: 0,
 spanish: 2.00,
 french: 2.00,
 chinese: 3.00
},
 music: {
 default: 0,
 happy: 1.00,
 custom: 3.00
},
 photo: 2.00,
 delivery: {
 standard: 0,
 priority: 5.00,
 urgent: 10.00
}
};
 this.init();
}

 init() {
 this.bindEvents();
 this.initializeForm();
}

 bindEvents() {
 // Language selection events
 const languageRadios = document.querySelectorAll('input[name="video_language"]');
 languageRadios.forEach(radio => {
 radio.addEventListener('change',this.updatePriceDisplay.bind(this));
});

 // Music selection events
 const musicRadios = document.querySelectorAll('input[name="background_music"]');
 musicRadios.forEach(radio => {
 radio.addEventListener('change',this.handleMusicChange.bind(this));
});

 // Photo upload events
 const photoUpload = document.getElementById('photo-upload');
 if (photoUpload) {
 photoUpload.addEventListener('change',this.handlePhotoUpload.bind(this));
}

 // Delivery speed events
 const deliveryRadios = document.querySelectorAll('input[name="delivery_speed"]');
 deliveryRadios.forEach(radio => {
 radio.addEventListener('change',this.updatePriceDisplay.bind(this));
});

 // Form validation events
 const form = document.getElementById('custom-options-form');
 if (form) {
 form.addEventListener('submit',this.handleFormSubmit.bind(this));
}

 // Character counting
 this.bindCharacterCounters();

 // Real-time validation
 this.bindRealTimeValidation();
}

 handleMusicChange(event) {
 const selectedValue = event.target.value;
 const customSongGroup = document.querySelector('.custom-song-group');
 
 if (customSongGroup) {
 if (selectedValue === 'custom') {
 customSongGroup.style.display = 'block';
 customSongGroup.classList.add('show');
 // Make custom song input required
 const customSongInput = document.getElementById('custom-song');
 if (customSongInput) {
 customSongInput.setAttribute('required','required');
}
} else {
 customSongGroup.classList.remove('show');
 customSongGroup.style.display = 'none';
 // Remove required attribute
 const customSongInput = document.getElementById('custom-song');
 if (customSongInput) {
 customSongInput.removeAttribute('required');
 customSongInput.value = '';
}
}
}

 this.updatePriceDisplay();
}

 handlePhotoUpload(event) {
 const file = event.target.files[0];
 const filePreview = document.querySelector('.file-preview');
 const uploadText = document.querySelector('.upload-text');
 
 if (file && filePreview && uploadText) {
 // Validate file type
 if (!file.type.startsWith('image/')) {
 this.showErrorMessage(['Please select a valid image file']);
 event.target.value = '';
 return;
}
 
 // Validate file size (max 5MB)
 if (file.size > 5 * 1024 * 1024) {
 this.showErrorMessage(['Image file size must be less than 5MB']);
 event.target.value = '';
 return;
}
 
 // Show preview
 const reader = new FileReader();
 reader.onload = (e) => {
 filePreview.innerHTML = `
 <div class="photo-preview">
 <img src="${e.target.result}" alt="Photo preview" loading="lazy" style="max-width: 100px;max-height: 100px;border-radius: 4px;">
 <button type="button" class="remove-photo" onclick="window.customProductOptionsInstance.removePhoto()">✕</button>
 </div>
 `;
 filePreview.style.display = 'block';
 uploadText.textContent = 'Photo uploaded ✓';
};
 reader.readAsDataURL(file);
}
 
 this.updatePriceDisplay();
}

 removePhoto() {
 const photoUpload = document.getElementById('photo-upload');
 const filePreview = document.querySelector('.file-preview');
 const uploadText = document.querySelector('.upload-text');
 
 if (photoUpload) photoUpload.value = '';
 if (filePreview) {
 filePreview.style.display = 'none';
 filePreview.innerHTML = '';
}
 if (uploadText) uploadText.textContent = 'Click to upload photo (+$2.00)';
 
 this.updatePriceDisplay();
}

 updatePriceDisplay() {
 let languageCost = 0;
 let musicCost = 0;
 let photoCost = 0;
 let deliveryCost = 0;

 // Language costs
 const selectedLanguage = document.querySelector('input[name="video_language"]:checked')?.value;
 if (selectedLanguage && this.pricing.language[selectedLanguage]) {
 languageCost = this.pricing.language[selectedLanguage];
}

 // Music costs
 const selectedMusic = document.querySelector('input[name="background_music"]:checked')?.value;
 if (selectedMusic && this.pricing.music[selectedMusic]) {
 musicCost = this.pricing.music[selectedMusic];
}

 // Photo costs
 const photoUpload = document.getElementById('photo-upload');
 if (photoUpload && photoUpload.files.length > 0) {
 photoCost = this.pricing.photo;
}

 // Delivery costs
 const selectedDelivery = document.querySelector('input[name="delivery_speed"]:checked')?.value;
 if (selectedDelivery && this.pricing.delivery[selectedDelivery]) {
 deliveryCost = this.pricing.delivery[selectedDelivery];
}

 // Update price display
 this.displayPrices(languageCost,musicCost,photoCost,deliveryCost);
}

 displayPrices(languageCost,musicCost,photoCost,deliveryCost) {
 // Update individual price displays
 const basePriceElement = document.getElementById('base-price');
 const languagePriceElement = document.getElementById('language-price');
 const musicPriceElement = document.getElementById('music-price');
 const photoPriceElement = document.getElementById('photo-price');
 const deliveryPriceElement = document.getElementById('delivery-price');
 const totalPriceElement = document.getElementById('total-price');

 if (basePriceElement) basePriceElement.textContent = this.basePrice.toFixed(2);
 if (languagePriceElement) languagePriceElement.textContent = languageCost.toFixed(2);
 if (musicPriceElement) musicPriceElement.textContent = musicCost.toFixed(2);
 if (photoPriceElement) photoPriceElement.textContent = photoCost.toFixed(2);
 if (deliveryPriceElement) deliveryPriceElement.textContent = deliveryCost.toFixed(2);

 const totalPrice = this.basePrice + languageCost + musicCost + photoCost + deliveryCost;
 if (totalPriceElement) {
 totalPriceElement.textContent = totalPrice.toFixed(2);
 
 // Add animation effect
 totalPriceElement.style.transform = 'scale(1.05)';
 setTimeout(() => {
 totalPriceElement.style.transform = 'scale(1)';
},200);
}
}

 bindCharacterCounters() {
 const messageTextarea = document.getElementById('message-content');
 if (messageTextarea) {
 const maxLength = parseInt(messageTextarea.getAttribute('maxlength')) || 300;
 const counterElement = messageTextarea.parentNode.querySelector('.char-count');
 
 if (counterElement) {
 const updateCounter = () => {
 const currentLength = messageTextarea.value.length;
 counterElement.textContent = `${currentLength}/${maxLength}`;
 
 // Add visual feedback
 if (currentLength > maxLength * 0.9) {
 counterElement.style.color = '#e74c3c';
 messageTextarea.style.borderColor = '#e74c3c';
} else if (currentLength > maxLength * 0.7) {
 counterElement.style.color = '#f39c12';
 messageTextarea.style.borderColor = '#f39c12';
} else {
 counterElement.style.color = '#7f8c8d';
 messageTextarea.style.borderColor = '#ddd';
}
};

 messageTextarea.addEventListener('input',updateCounter);
 updateCounter();// Initialize counter
}
}

 // Custom song character counter if needed
 const customSongInput = document.getElementById('custom-song');
 if (customSongInput) {
 customSongInput.addEventListener('input',(event) => {
 const maxLength = 100;// Set a reasonable limit for song requests
 const currentLength = event.target.value.length;
 
 if (currentLength > maxLength) {
 event.target.value = event.target.value.substring(0,maxLength);
}
});
}
}

 bindRealTimeValidation() {
 // Video message validation
 const videoMessage = document.getElementById('message-content');
 if (videoMessage) {
 videoMessage.addEventListener('blur',() => {
 if (videoMessage.value.trim().length < 10) {
 this.showFieldError(videoMessage,'Message should be at least 10 characters long');
} else {
 this.clearFieldError(videoMessage);
}
});
}

 // Recipient name validation
 const recipientName = document.getElementById('recipient-name');
 if (recipientName) {
 recipientName.addEventListener('blur',() => {
 if (recipientName.value.trim().length < 2) {
 this.showFieldError(recipientName,'Please enter a valid name');
} else {
 this.clearFieldError(recipientName);
}
});
}

 // Custom song validation
 const customSong = document.getElementById('custom-song');
 if (customSong) {
 customSong.addEventListener('blur',() => {
 const musicCustom = document.getElementById('music-custom');
 if (musicCustom && musicCustom.checked && customSong.value.trim().length < 3) {
 this.showFieldError(customSong,'Please specify the song name and artist');
} else {
 this.clearFieldError(customSong);
}
});
}
}

 handleFormSubmit(event) {
 event.preventDefault();
 
 if (!this.validateForm()) {
 return false;
}

 // Collect form data
 const videoMessage = document.getElementById('message-content');
 const recipientName = document.getElementById('recipient-name');
 const selectedLanguage = document.querySelector('input[name="video_language"]:checked');
 const selectedMusic = document.querySelector('input[name="background_music"]:checked');
 const selectedDelivery = document.querySelector('input[name="delivery_speed"]:checked');
 
 const formData = {
 message: videoMessage.value,
 recipient: recipientName.value,
 language: selectedLanguage.value,
 music: selectedMusic.value,
 delivery: selectedDelivery.value,
 occasion: document.getElementById('special-occasion')?.value || '',
 totalPrice: this.calculateTotalPrice()
};

 this.showLoadingState();
 
 // Simulate submission process
 setTimeout(() => {
 this.hideLoadingState();
 this.showSuccessMessage();
},2000);

 return false;// Prevent actual submission,for demo purposes only
}

 validateForm() {
 let isValid = true;
 const errors = [];

 // Validate required fields
 const videoMessage = document.getElementById('message-content');
 const recipientName = document.getElementById('recipient-name');
 
 if (!videoMessage || videoMessage.value.trim().length < 10) {
 this.showFieldError(videoMessage,'Message should be at least 10 characters long');
 errors.push('Video message is too short');
 isValid = false;
} else {
 this.clearFieldError(videoMessage);
}
 
 if (!recipientName || recipientName.value.trim().length < 2) {
 this.showFieldError(recipientName,'Please enter a valid recipient name');
 errors.push('Recipient name is required');
 isValid = false;
} else {
 this.clearFieldError(recipientName);
}

 // Validate language selection
 const selectedLanguage = document.querySelector('input[name="video_language"]:checked');
 if (!selectedLanguage) {
 errors.push('Please select a video language');
 isValid = false;
}
 
 // Validate music selection
 const selectedMusic = document.querySelector('input[name="background_music"]:checked');
 if (!selectedMusic) {
 errors.push('Please select background music');
 isValid = false;
}
 
 // Validate delivery speed
 const selectedDelivery = document.querySelector('input[name="delivery_speed"]:checked');
 if (!selectedDelivery) {
 errors.push('Please select delivery speed');
 isValid = false;
}

 // Validate custom song if selected
 const musicCustom = document.getElementById('music-custom');
 const customSong = document.getElementById('custom-song');
 if (musicCustom && musicCustom.checked) {
 if (!customSong || customSong.value.trim().length < 3) {
 this.showFieldError(customSong,'Please specify the song name and artist');
 errors.push('Custom song details are required');
 isValid = false;
} else {
 this.clearFieldError(customSong);
}
}

 if (!isValid) {
 this.showErrorMessage(errors);
} else {
 this.clearErrorMessage();
}

 return isValid;
}

 calculateTotalPrice() {
 let languageCost = 0;
 let musicCost = 0;
 let photoCost = 0;
 let deliveryCost = 0;

 // Language costs
 const selectedLanguage = document.querySelector('input[name="video_language"]:checked')?.value;
 if (selectedLanguage && this.pricing.language[selectedLanguage]) {
 languageCost = this.pricing.language[selectedLanguage];
}

 // Music costs
 const selectedMusic = document.querySelector('input[name="background_music"]:checked')?.value;
 if (selectedMusic && this.pricing.music[selectedMusic]) {
 musicCost = this.pricing.music[selectedMusic];
}

 // Photo costs
 const photoUpload = document.getElementById('photo-upload');
 if (photoUpload && photoUpload.files.length > 0) {
 photoCost = this.pricing.photo;
}

 // Delivery costs
 const selectedDelivery = document.querySelector('input[name="delivery_speed"]:checked')?.value;
 if (selectedDelivery && this.pricing.delivery[selectedDelivery]) {
 deliveryCost = this.pricing.delivery[selectedDelivery];
}

 return this.basePrice + languageCost + musicCost + photoCost + deliveryCost;
}

 showFieldError(field,message) {
 if (!field) return;
 
 // Remove existing error
 this.clearFieldError(field);
 
 // Add error styling
 field.style.borderColor = '#e74c3c';
 field.style.backgroundColor = '#fdf2f2';
 
 // Create error message element
 const errorElement = document.createElement('div');
 errorElement.className = 'field-error';
 errorElement.textContent = message;
 errorElement.style.color = '#e74c3c';
 errorElement.style.fontSize = '0.875rem';
 errorElement.style.marginTop = '0.25rem';
 
 // Insert error message after the field
 field.parentNode.insertBefore(errorElement,field.nextSibling);
}

 clearFieldError(field) {
 if (!field) return;
 
 // Remove error styling
 field.style.borderColor = '';
 field.style.backgroundColor = '';
 
 // Remove error message
 const errorElement = field.parentNode.querySelector('.field-error');
 if (errorElement) {
 errorElement.remove();
}
}

 showErrorMessage(errors) {
 const errorContainer = document.querySelector('.error-message');
 if (errorContainer && errors.length > 0) {
 errorContainer.innerHTML = `
 <div class="alert alert-error">
 <strong>⚠️ Please fix the following issues:</strong>
 <ul>
 ${errors.map(error => `<li>${error}</li>`).join('')}
 </ul>
 </div>
 `;
 errorContainer.style.display = 'block';
 errorContainer.scrollIntoView({behavior: 'smooth',block: 'center'});
}
}

 clearErrorMessage() {
 const errorContainer = document.querySelector('.error-message');
 if (errorContainer) {
 errorContainer.style.display = 'none';
 errorContainer.innerHTML = '';
}
}

 showLoadingState() {
 const submitButton = document.querySelector('.custom-options-submit');
 if (submitButton) {
 submitButton.disabled = true;
 submitButton.innerHTML = '�?Processing Your Order...';
 submitButton.style.opacity = '0.7';
}
}

 hideLoadingState() {
 const submitButton = document.querySelector('.custom-options-submit');
 if (submitButton) {
 submitButton.disabled = false;
 submitButton.innerHTML = '🛒 Order Your Video Message';
 submitButton.style.opacity = '1';
}
}

 showSuccessMessage() {
 const form = document.getElementById('custom-options-form');
 if (form) {
 const successMessage = document.createElement('div');
 successMessage.className = 'success-message';
 successMessage.innerHTML = `
 <div class="alert alert-success">
 <h4>🎉 Order Submitted Successfully!</h4>
 <p>Thank you for your order! We'll start creating your personalized video message right away.</p>
 <p><strong>📧 You'll receive a confirmation email shortly with your order details.</strong></p>
 <p><strong>🎬 Expected delivery: 1-2 business days</strong></p>
 </div>
 `;
 
 form.parentNode.insertBefore(successMessage,form);
 successMessage.scrollIntoView({behavior: 'smooth',block: 'center'});
 
 // Hide form
 form.style.display = 'none';
}
}

 initializeForm() {
 // Initialize price display
 this.updatePriceDisplay();
 
 // Initialize character counters
 this.bindCharacterCounters();
 
 // Add smooth transitions
 const form = document.getElementById('custom-options-form');
 if (form) {
 form.style.transition = 'all 0.3s ease';
}
 
 // Initialize file upload styling
 const fileInput = document.getElementById('photo-upload');
 if (fileInput) {
 fileInput.style.display = 'none';
}
}
}

// Make class available globally
window.CustomProductOptions = CustomProductOptions;

// Auto-initialize if DOM is ready
if (document.readyState === 'loading') {
 document.addEventListener('DOMContentLoaded',() => {
 if (!window.customProductOptionsInstance) {
 window.customProductOptionsInstance = new CustomProductOptions();
}
});
} else {
 if (!window.customProductOptionsInstance) {
 window.customProductOptionsInstance = new CustomProductOptions();
}
}

